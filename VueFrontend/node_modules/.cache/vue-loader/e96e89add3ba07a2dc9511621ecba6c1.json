{"remainingRequest":"S:\\FH\\rummikub_web\\VueFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!S:\\FH\\rummikub_web\\VueFrontend\\src\\components\\TileRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"S:\\FH\\rummikub_web\\VueFrontend\\src\\components\\TileRow.vue","mtime":1610095281071},{"path":"S:\\FH\\rummikub_web\\VueFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"S:\\FH\\rummikub_web\\VueFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"S:\\FH\\rummikub_web\\VueFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"S:\\FH\\rummikub_web\\VueFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TileElement from './TileElement.vue';\nimport LabelItem from \"./LabelItem\";\n\nexport default {\n    name: \"TileRow\",\n    components: {\n        LabelItem,\n        TileElement\n    },\n    props: [\"tiles\", \"cols\", \"rowNumber\", \"gridName\"],\n    /* gets this\n    [\n        { x: 1, y: 5, tile: { number: 1, color: 'GREEN', joker: false } },\n        { x: 1, y: 1, tile: { number: 1, color: 'WHITE', joker: true } },\n        ...\n    ]*/\n    methods: {\n        getTiles() {\n            return this.$props.tiles\n        },\n        getRowNumber() {\n            return this.$props.rowNumber\n        },\n        getTileOrEmpty(array, x, y) {\n            let t = array.find(function (element) {\n                return element.x == x && element.y == y;\n            });\n\n            if (t == undefined) {\n                return {}\n            } else {\n                return t.tile\n            }\n        },\n        onTileClick: function (tileId) {\n            this.$emit('tile-clicked', tileId)\n        }\n    }\n}\n",{"version":3,"sources":["TileRow.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TileRow.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <LabelItem :label=\"this.$props.rowNumber\"></LabelItem>\r\n        <TileElement v-for=\"n in this.$props.cols\"\r\n                     v-bind:tile=\"getTileOrEmpty(getTiles(), getRowNumber(), n)\"\r\n                     v-bind:id=\"gridName + '_' + rowNumber + '_' + n\"\r\n                     v-on:tile-clicked=\"onTileClick\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import TileElement from './TileElement.vue';\r\n    import LabelItem from \"./LabelItem\";\r\n\r\n    export default {\r\n        name: \"TileRow\",\r\n        components: {\r\n            LabelItem,\r\n            TileElement\r\n        },\r\n        props: [\"tiles\", \"cols\", \"rowNumber\", \"gridName\"],\r\n        /* gets this\r\n        [\r\n            { x: 1, y: 5, tile: { number: 1, color: 'GREEN', joker: false } },\r\n            { x: 1, y: 1, tile: { number: 1, color: 'WHITE', joker: true } },\r\n            ...\r\n        ]*/\r\n        methods: {\r\n            getTiles() {\r\n                return this.$props.tiles\r\n            },\r\n            getRowNumber() {\r\n                return this.$props.rowNumber\r\n            },\r\n            getTileOrEmpty(array, x, y) {\r\n                let t = array.find(function (element) {\r\n                    return element.x == x && element.y == y;\r\n                });\r\n\r\n                if (t == undefined) {\r\n                    return {}\r\n                } else {\r\n                    return t.tile\r\n                }\r\n            },\r\n            onTileClick: function (tileId) {\r\n                this.$emit('tile-clicked', tileId)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n"]}]}